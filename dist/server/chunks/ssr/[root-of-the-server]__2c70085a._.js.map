{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/feitan/Desktop/new%20ai/src/components/ui/sonner.tsx"],"sourcesContent":["\"use client\";\n\nimport { useTheme } from \"next-themes\";\nimport { Toaster as Sonner, ToasterProps } from \"sonner\";\n\nconst Toaster = ({ ...props }: ToasterProps) => {\n  const { theme = \"system\" } = useTheme();\n\n  return (\n    <Sonner\n      theme={theme as ToasterProps[\"theme\"]}\n      className=\"toaster group\"\n      style={\n        {\n          \"--normal-bg\": \"var(--popover)\",\n          \"--normal-text\": \"var(--popover-foreground)\",\n          \"--normal-border\": \"var(--border)\",\n        } as React.CSSProperties\n      }\n      {...props}\n    />\n  );\n};\n\nexport { Toaster };\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAKA,MAAM,UAAU,CAAC,EAAE,GAAG,OAAqB;IACzC,MAAM,EAAE,QAAQ,QAAQ,EAAE,GAAG,CAAA,GAAA,yPAAA,CAAA,WAAQ,AAAD;IAEpC,qBACE,6VAAC,wQAAA,CAAA,UAAM;QACL,OAAO;QACP,WAAU;QACV,OACE;YACE,eAAe;YACf,iBAAiB;YACjB,mBAAmB;QACrB;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 49, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/feitan/Desktop/new%20ai/src/lib/store.ts"],"sourcesContent":["import { create } from \"zustand\";\nimport { persist, createJSONStorage } from \"zustand/middleware\";\nimport { CustomSkin } from \"./types\";\n\ninterface SelectedSkin {\n  championId: number;\n  skinId: number;\n  chromaId?: number;\n  fantome?: string;\n  timestamp?: number; // For tracking usage\n}\n\n// Define the possible injection statuses\nexport type InjectionStatus = \"idle\" | \"injecting\" | \"success\" | \"error\" | \"cancelled\";\n\n// Custom skin tabs\nexport type SkinTab = \"official\" | \"custom\";\n\n// Enhanced party member interface\nexport interface PartyMember {\n  id: string;\n  name: string;\n  availability: \"online\" | \"away\" | \"offline\" | \"in-game\";\n  skins: Map<number, SelectedSkin>; // Map of champion ID to selected skin\n  lastSeen: number; // Timestamp\n  version?: string; // App version for compatibility\n}\n\n// Settings interface for better organization\ninterface AppSettings {\n  autoUpdateData: boolean;\n  enablePartyMode: boolean;\n  enableNotifications: boolean;\n  theme: \"light\" | \"dark\" | \"system\";\n  language: string;\n  maxCacheSize: number;\n  debugMode: boolean;\n}\n\n// Performance metrics for monitoring\ninterface PerformanceMetrics {\n  lastUpdateCheck: number;\n  averageUpdateTime: number;\n  updateCount: number;\n  errorCount: number;\n}\n\ninterface GameState {\n  // Core game state\n  leaguePath: string | null;\n  lcuStatus: string | null;\n  injectionStatus: InjectionStatus;\n  \n  // Skin selection state\n  selectedSkins: Map<number, SelectedSkin>;\n  favorites: Set<number>;\n  recentChampions: number[]; // Recently selected champions\n  \n  // UI state\n  hasCompletedOnboarding: boolean;\n  activeTab: SkinTab;\n  \n  // Custom skins\n  customSkins: Map<number, CustomSkin[]>;\n  \n  // Data management\n  hasNewDataUpdate: boolean;\n  lastDataUpdate: number;\n  \n  // Party mode state\n  partyMembers: PartyMember[];\n  pendingSyncRequest: {\n    memberId: string;\n    memberName: string;\n    data: string;\n    timestamp: number;\n  } | null;\n  \n  // App settings\n  settings: AppSettings;\n  \n  // Performance metrics\n  metrics: PerformanceMetrics;\n  \n  // Actions with improved typing and performance\n  setLeaguePath: (path: string) => void;\n  setLcuStatus: (status: string) => void;\n  setInjectionStatus: (status: InjectionStatus) => void;\n  \n  // Skin management\n  selectSkin: (\n    championId: number,\n    skinId: number,\n    chromaId?: number,\n    fantome?: string\n  ) => void;\n  clearSelection: (championId: number) => void;\n  clearAllSelections: () => void;\n  getSelectedSkin: (championId: number) => SelectedSkin | undefined;\n  \n  // Favorites management\n  toggleFavorite: (championId: number) => void;\n  setFavorites: (favorites: Set<number>) => void;\n  addToRecent: (championId: number) => void;\n  \n  // UI state management\n  setHasCompletedOnboarding: (completed: boolean) => void;\n  setActiveTab: (tab: SkinTab) => void;\n  \n  // Custom skins management\n  addCustomSkin: (skin: CustomSkin) => void;\n  removeCustomSkin: (skinId: string) => void;\n  setCustomSkins: (skins: CustomSkin[]) => void;\n  getCustomSkins: (championId: number) => CustomSkin[];\n  \n  // Data update management\n  setHasNewDataUpdate: (hasUpdate: boolean) => void;\n  updateLastDataUpdate: () => void;\n  \n  // Party mode management\n  addPartyMember: (member: PartyMember) => void;\n  removePartyMember: (memberId: string) => void;\n  updatePartyMemberSkins: (\n    memberId: string,\n    skins: Map<number, SelectedSkin>\n  ) => void;\n  updatePartyMemberStatus: (memberId: string, availability: PartyMember[\"availability\"]) => void;\n  clearParty: () => void;\n  setPendingSyncRequest: (\n    request: { memberId: string; memberName: string; data: string } | null\n  ) => void;\n  \n  // Settings management\n  updateSettings: (settings: Partial<AppSettings>) => void;\n  resetSettings: () => void;\n  \n  // Performance tracking\n  updateMetrics: (updates: Partial<PerformanceMetrics>) => void;\n  \n  // Bulk operations for better performance\n  bulkUpdateSkins: (updates: Array<{ championId: number; skin: SelectedSkin }>) => void;\n  bulkToggleFavorites: (championIds: number[]) => void;\n  \n  // Data cleanup\n  cleanupOldData: () => void;\n}\n\n// Default settings\nconst defaultSettings: AppSettings = {\n  autoUpdateData: true,\n  enablePartyMode: false,\n  enableNotifications: true,\n  theme: \"system\",\n  language: \"en\",\n  maxCacheSize: 100,\n  debugMode: false,\n};\n\n// Default metrics\nconst defaultMetrics: PerformanceMetrics = {\n  lastUpdateCheck: 0,\n  averageUpdateTime: 0,\n  updateCount: 0,\n  errorCount: 0,\n};\n\n// Storage wrapper for better Map/Set handling\nconst storage = {\n  getItem: (name: string) => {\n    const item = localStorage.getItem(name);\n    if (!item) return null;\n    \n    try {\n      const parsed = JSON.parse(item);\n      // Convert serialized Maps and Sets back to their proper types\n      if (parsed.state) {\n        if (parsed.state.selectedSkins) {\n          parsed.state.selectedSkins = new Map(parsed.state.selectedSkins);\n        }\n        if (parsed.state.favorites) {\n          parsed.state.favorites = new Set(parsed.state.favorites);\n        }\n        if (parsed.state.customSkins) {\n          parsed.state.customSkins = new Map(parsed.state.customSkins);\n        }\n        if (parsed.state.partyMembers) {\n          parsed.state.partyMembers = parsed.state.partyMembers.map((member: any) => ({\n            ...member,\n            skins: new Map(member.skins || [])\n          }));\n        }\n      }\n      return parsed;\n    } catch {\n      return null;\n    }\n  },\n  \n  setItem: (name: string, value: any) => {\n    try {\n      // Convert Maps and Sets to arrays for serialization\n      const serializable = {\n        ...value,\n        state: {\n          ...value.state,\n          selectedSkins: value.state.selectedSkins ? Array.from(value.state.selectedSkins.entries()) : [],\n          favorites: value.state.favorites ? Array.from(value.state.favorites) : [],\n          customSkins: value.state.customSkins ? Array.from(value.state.customSkins.entries()) : [],\n          partyMembers: value.state.partyMembers ? value.state.partyMembers.map((member: PartyMember) => ({\n            ...member,\n            skins: Array.from(member.skins.entries())\n          })) : []\n        }\n      };\n      localStorage.setItem(name, JSON.stringify(serializable));\n    } catch (error) {\n      console.warn(\"Failed to persist store state:\", error);\n    }\n  },\n  \n  removeItem: (name: string) => {\n    localStorage.removeItem(name);\n  }\n};\n\nexport const useGameStore = create<GameState>()(\n  persist(\n    (set, get) => ({\n      // Initial state\n      leaguePath: null,\n      lcuStatus: null,\n      injectionStatus: \"idle\",\n      selectedSkins: new Map(),\n      favorites: new Set(),\n      recentChampions: [],\n      hasCompletedOnboarding: false,\n      activeTab: \"official\",\n      customSkins: new Map(),\n      hasNewDataUpdate: false,\n      lastDataUpdate: 0,\n      partyMembers: [],\n      pendingSyncRequest: null,\n      settings: defaultSettings,\n      metrics: defaultMetrics,\n\n      // Basic setters\n      setLeaguePath: (path) => set({ leaguePath: path }),\n      setLcuStatus: (status) => set({ lcuStatus: status }),\n      setInjectionStatus: (status) => set({ injectionStatus: status }),\n\n      // Enhanced skin management\n      selectSkin: (championId, skinId, chromaId, fantome) => {\n        set((state) => {\n          const newSelectedSkins = new Map(state.selectedSkins);\n          newSelectedSkins.set(championId, {\n            championId,\n            skinId,\n            chromaId,\n            fantome,\n            timestamp: Date.now(),\n          });\n          \n          // Update recent champions\n          const newRecent = [championId, ...state.recentChampions.filter(id => id !== championId)].slice(0, 10);\n          \n          return { \n            selectedSkins: newSelectedSkins,\n            recentChampions: newRecent,\n          };\n        });\n      },\n\n      clearSelection: (championId) => {\n        set((state) => {\n          const newSelectedSkins = new Map(state.selectedSkins);\n          newSelectedSkins.delete(championId);\n          return { selectedSkins: newSelectedSkins };\n        });\n      },\n\n      clearAllSelections: () => set({ selectedSkins: new Map() }),\n\n      getSelectedSkin: (championId) => {\n        const state = get();\n        return state.selectedSkins.get(championId);\n      },\n\n      // Enhanced favorites management\n      toggleFavorite: (championId) => {\n        set((state) => {\n          const newFavorites = new Set(state.favorites);\n          if (newFavorites.has(championId)) {\n            newFavorites.delete(championId);\n          } else {\n            newFavorites.add(championId);\n          }\n          return { favorites: newFavorites };\n        });\n      },\n\n      setFavorites: (favorites) => set({ favorites }),\n\n      addToRecent: (championId) => {\n        set((state) => {\n          const newRecent = [championId, ...state.recentChampions.filter(id => id !== championId)].slice(0, 10);\n          return { recentChampions: newRecent };\n        });\n      },\n\n      // UI state\n      setHasCompletedOnboarding: (completed) => set({ hasCompletedOnboarding: completed }),\n      setActiveTab: (tab) => set({ activeTab: tab }),\n\n      // Enhanced custom skins management\n      addCustomSkin: (skin) => {\n        set((state) => {\n          const newCustomSkins = new Map(state.customSkins);\n          const championId = skin.champion_id;\n          const existingSkins = newCustomSkins.get(championId) ?? [];\n          newCustomSkins.set(championId, [...existingSkins, skin]);\n          return { customSkins: newCustomSkins };\n        });\n      },\n\n      removeCustomSkin: (skinId) => {\n        set((state) => {\n          const newCustomSkins = new Map(state.customSkins);\n\n          for (const [championId, skins] of newCustomSkins.entries()) {\n            const updatedSkins = skins.filter((skin) => skin.id !== skinId);\n\n            if (updatedSkins.length !== skins.length) {\n              if (updatedSkins.length === 0) {\n                newCustomSkins.delete(championId);\n              } else {\n                newCustomSkins.set(championId, updatedSkins);\n              }\n              break;\n            }\n          }\n\n          return { customSkins: newCustomSkins };\n        });\n      },\n\n      setCustomSkins: (skins) => {\n        set(() => {\n          const customSkinsMap = new Map<number, CustomSkin[]>();\n\n          skins.forEach((skin) => {\n            const championId = skin.champion_id;\n            const existingSkins = customSkinsMap.get(championId) ?? [];\n            customSkinsMap.set(championId, [...existingSkins, skin]);\n          });\n\n          return { customSkins: customSkinsMap };\n        });\n      },\n\n      getCustomSkins: (championId) => {\n        const state = get();\n        return state.customSkins.get(championId) ?? [];\n      },\n\n      // Data update management\n      setHasNewDataUpdate: (hasUpdate) => set({ hasNewDataUpdate: hasUpdate }),\n      updateLastDataUpdate: () => set({ lastDataUpdate: Date.now() }),\n\n      // Enhanced party mode\n      addPartyMember: (member) => {\n        set((state) => {\n          if (state.partyMembers.some((m) => m.id === member.id)) {\n            return state;\n          }\n          if (state.partyMembers.length >= 4) {\n            return state;\n          }\n          return { \n            partyMembers: [...state.partyMembers, { \n              ...member, \n              lastSeen: Date.now() \n            }] \n          };\n        });\n      },\n\n      removePartyMember: (memberId) => {\n        set((state) => ({\n          partyMembers: state.partyMembers.filter((m) => m.id !== memberId),\n        }));\n      },\n\n      updatePartyMemberSkins: (memberId, skins) => {\n        set((state) => ({\n          partyMembers: state.partyMembers.map((member) =>\n            member.id === memberId \n              ? { ...member, skins, lastSeen: Date.now() } \n              : member\n          ),\n        }));\n      },\n\n      updatePartyMemberStatus: (memberId, availability) => {\n        set((state) => ({\n          partyMembers: state.partyMembers.map((member) =>\n            member.id === memberId \n              ? { ...member, availability, lastSeen: Date.now() } \n              : member\n          ),\n        }));\n      },\n\n      clearParty: () => set({ partyMembers: [] }),\n\n      setPendingSyncRequest: (request) => {\n        set({ \n          pendingSyncRequest: request ? { \n            ...request, \n            timestamp: Date.now() \n          } : null \n        });\n      },\n\n      // Settings management\n      updateSettings: (updates) => {\n        set((state) => ({\n          settings: { ...state.settings, ...updates }\n        }));\n      },\n\n      resetSettings: () => set({ settings: defaultSettings }),\n\n      // Performance tracking\n      updateMetrics: (updates) => {\n        set((state) => ({\n          metrics: { ...state.metrics, ...updates }\n        }));\n      },\n\n      // Bulk operations\n      bulkUpdateSkins: (updates) => {\n        set((state) => {\n          const newSelectedSkins = new Map(state.selectedSkins);\n          updates.forEach(({ championId, skin }) => {\n            newSelectedSkins.set(championId, skin);\n          });\n          return { selectedSkins: newSelectedSkins };\n        });\n      },\n\n      bulkToggleFavorites: (championIds) => {\n        set((state) => {\n          const newFavorites = new Set(state.favorites);\n          championIds.forEach(id => {\n            if (newFavorites.has(id)) {\n              newFavorites.delete(id);\n            } else {\n              newFavorites.add(id);\n            }\n          });\n          return { favorites: newFavorites };\n        });\n      },\n\n      // Data cleanup\n      cleanupOldData: () => {\n        set((state) => {\n          const now = Date.now();\n          const oneMonthAgo = now - (30 * 24 * 60 * 60 * 1000);\n          \n          // Clean up old party member data\n          const activePartyMembers = state.partyMembers.filter(\n            member => member.lastSeen > oneMonthAgo\n          );\n          \n          // Clean up old recent champions\n          const recentChampions = state.recentChampions.slice(0, 10);\n          \n          return {\n            partyMembers: activePartyMembers,\n            recentChampions,\n          };\n        });\n      },\n    }),\n    {\n      name: \"game-store\",\n      storage: createJSONStorage(() => storage),\n      partialize: (state) => ({\n        // Only persist certain parts of the state\n        leaguePath: state.leaguePath,\n        favorites: state.favorites,\n        hasCompletedOnboarding: state.hasCompletedOnboarding,\n        activeTab: state.activeTab,\n        recentChampions: state.recentChampions,\n        settings: state.settings,\n        lastDataUpdate: state.lastDataUpdate,\n        metrics: state.metrics,\n      }),\n    }\n  )\n);\n\n// Terminal log store with improvements\nexport interface TerminalLog {\n  id: string;\n  message: string;\n  log_type: string;\n  timestamp: string;\n  level: \"info\" | \"warn\" | \"error\" | \"debug\";\n}\n\ninterface TerminalLogState {\n  logs: TerminalLog[];\n  maxLogs: number;\n  addLog: (log: Omit<TerminalLog, \"id\">) => void;\n  addBulkLogs: (logs: Array<Omit<TerminalLog, \"id\">>) => void;\n  clearLogs: () => void;\n  getLogsByLevel: (level: TerminalLog[\"level\"]) => TerminalLog[];\n  getRecentLogs: (count?: number) => TerminalLog[];\n}\n\nexport const useTerminalLogStore = create<TerminalLogState>((set, get) => ({\n  logs: [],\n  maxLogs: 1000,\n\n  addLog: (log) => {\n    set((state) => {\n      const newLog: TerminalLog = {\n        ...log,\n        id: `${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n      };\n      \n      const newLogs = [...state.logs, newLog];\n      \n      // Keep only the most recent logs\n      if (newLogs.length > state.maxLogs) {\n        newLogs.splice(0, newLogs.length - state.maxLogs);\n      }\n      \n      return { logs: newLogs };\n    });\n  },\n\n  addBulkLogs: (logs) => {\n    set((state) => {\n      const newLogs = logs.map(log => ({\n        ...log,\n        id: `${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n      }));\n      \n      const allLogs = [...state.logs, ...newLogs];\n      \n      // Keep only the most recent logs\n      if (allLogs.length > state.maxLogs) {\n        allLogs.splice(0, allLogs.length - state.maxLogs);\n      }\n      \n      return { logs: allLogs };\n    });\n  },\n\n  clearLogs: () => set({ logs: [] }),\n\n  getLogsByLevel: (level) => {\n    const state = get();\n    return state.logs.filter(log => log.level === level);\n  },\n\n  getRecentLogs: (count = 50) => {\n    const state = get();\n    return state.logs.slice(-count);\n  },\n}));\n\n// Selector hooks for better performance\nexport const useSelectedSkin = (championId: number) => \n  useGameStore(state => state.selectedSkins.get(championId));\n\nexport const useIsFavorite = (championId: number) => \n  useGameStore(state => state.favorites.has(championId));\n\nexport const useCustomSkinsForChampion = (championId: number) => \n  useGameStore(state => state.customSkins.get(championId) ?? []);\n\nexport const useAppSettings = () => \n  useGameStore(state => state.settings);\n\nexport const usePerformanceMetrics = () => \n  useGameStore(state => state.metrics);\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 491, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/feitan/Desktop/new%20ai/src/components/providers/TerminalLogListener.tsx"],"sourcesContent":["\"use client\";\nimport { useEffect } from \"react\";\nimport { listen } from \"@tauri-apps/api/event\";\nimport { useTerminalLogStore, TerminalLog } from \"@/lib/store\";\n\nexport function TerminalLogListener() {\n  useEffect(() => {\n    const unlisten = listen(\"terminal-log\", (event) => {\n      const log = event.payload as TerminalLog;\n      if (\n        log &&\n        typeof log === \"object\" &&\n        \"message\" in log &&\n        \"log_type\" in log &&\n        \"timestamp\" in log\n      ) {\n        useTerminalLogStore.getState().addLog(log);\n      }\n    });\n    return () => {\n      void unlisten.then((fn) => fn());\n    };\n  }, []);\n  return null;\n}\n"],"names":[],"mappings":";;;AACA;AACA;AACA;AAHA;;;;AAKO,SAAS;IACd,CAAA,GAAA,oTAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,WAAW,CAAA,GAAA,kNAAA,CAAA,SAAM,AAAD,EAAE,gBAAgB,CAAC;YACvC,MAAM,MAAM,MAAM,OAAO;YACzB,IACE,OACA,OAAO,QAAQ,YACf,aAAa,OACb,cAAc,OACd,eAAe,KACf;gBACA,mHAAA,CAAA,sBAAmB,CAAC,QAAQ,GAAG,MAAM,CAAC;YACxC;QACF;QACA,OAAO;YACL,KAAK,SAAS,IAAI,CAAC,CAAC,KAAO;QAC7B;IACF,GAAG,EAAE;IACL,OAAO;AACT","debugId":null}},
    {"offset": {"line": 521, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/feitan/Desktop/new%20ai/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,yNAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,sLAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 537, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/feitan/Desktop/new%20ai/src/components/ui/switch.tsx"],"sourcesContent":["\"use client\";\n\nimport * as React from \"react\";\nimport * as SwitchPrimitive from \"@radix-ui/react-switch\";\n\nimport { cn } from \"@/lib/utils\";\n\nfunction Switch({\n  className,\n  ...props\n}: React.ComponentProps<typeof SwitchPrimitive.Root>) {\n  return (\n    <SwitchPrimitive.Root\n      data-slot=\"switch\"\n      className={cn(\n        \"peer data-[state=checked]:bg-primary data-[state=unchecked]:bg-input focus-visible:border-ring focus-visible:ring-ring/50 dark:data-[state=unchecked]:bg-input/80 inline-flex h-[1.25rem] w-8.25 shrink-0 items-center rounded-full border border-transparent shadow-xs transition-all outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <SwitchPrimitive.Thumb\n        data-slot=\"switch-thumb\"\n        className={cn(\n          \"bg-background dark:data-[state=unchecked]:bg-foreground dark:data-[state=checked]:bg-primary-foreground pointer-events-none block size-4 rounded-full ring-0 transition-transform data-[state=checked]:translate-x-[calc(100%-2px)] data-[state=unchecked]:translate-x-0\"\n        )}\n      />\n    </SwitchPrimitive.Root>\n  );\n}\n\nexport { Switch };\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,OAAO,EACd,SAAS,EACT,GAAG,OAC+C;IAClD,qBACE,6VAAC,+QAAA,CAAA,OAAoB;QACnB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,gXACA;QAED,GAAG,KAAK;kBAET,cAAA,6VAAC,+QAAA,CAAA,QAAqB;YACpB,aAAU;YACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV;;;;;;;;;;;AAKV","debugId":null}},
    {"offset": {"line": 573, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/feitan/Desktop/new%20ai/src/components/ui/label.tsx"],"sourcesContent":["\"use client\";\n\nimport * as React from \"react\";\nimport * as LabelPrimitive from \"@radix-ui/react-label\";\n\nimport { cn } from \"@/lib/utils\";\n\nfunction Label({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  return (\n    <LabelPrimitive.Root\n      data-slot=\"label\"\n      className={cn(\n        \"flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  );\n}\n\nexport { Label };\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,MAAM,EACb,SAAS,EACT,GAAG,OAC8C;IACjD,qBACE,6VAAC,8QAAA,CAAA,OAAmB;QAClB,aAAU;QACV,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,uNACA;QAED,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 601, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/feitan/Desktop/new%20ai/src/components/ThemeToneSelector.tsx"],"sourcesContent":["\"use client\";\n\nimport { useEffect, useState, useRef, useCallback } from \"react\";\nimport { useTheme } from \"next-themes\";\nimport { cn } from \"@/lib/utils\";\nimport { SunIcon, MoonIcon } from \"lucide-react\";\nimport { Switch } from \"@/components/ui/switch\";\nimport { invoke } from \"@tauri-apps/api/core\";\nimport { toast } from \"sonner\";\nimport { useThemeToneContext } from \"@/components/providers/ThemeToneProvider\";\nimport { Label } from \"./ui/label\";\n\n// Define theme tone options with palettes for both light and dark modes\n// Now exported so it can be used by ThemeInitializer\nexport const TONES = [\n  {\n    name: \"Gray\",\n    value: \"gray\",\n    palette: {\n      primary: \"oklch(0.55 0 0)\",\n      background: \"oklch(0.98 0 0)\",\n      backgroundDark: \"oklch(0.18 0 0)\",\n      foreground: \"oklch(0.18 0 0)\",\n      foregroundDark: \"oklch(0.98 0 0)\",\n      border: \"oklch(0.85 0 0)\",\n      borderDark: \"oklch(0.25 0 0)\",\n      accent: \"oklch(0.7 0 0)\",\n      accentDark: \"oklch(0.3 0 0)\",\n      muted: \"oklch(0.93 0 0)\",\n      mutedDark: \"oklch(0.22 0 0)\",\n    },\n  },\n  {\n    name: \"Blue\",\n    value: \"blue\",\n    palette: {\n      primary: \"oklch(0.65 0.13 250)\",\n      background: \"oklch(0.98 0.02 250)\",\n      backgroundDark: \"oklch(0.22 0.06 250)\",\n      foreground: \"oklch(0.18 0.01 250)\",\n      foregroundDark: \"oklch(0.98 0.01 250)\",\n      border: \"oklch(0.85 0.04 250)\",\n      borderDark: \"oklch(0.3 0.05 250)\",\n      accent: \"oklch(0.7 0.09 250)\",\n      accentDark: \"oklch(0.35 0.09 250)\",\n      muted: \"oklch(0.93 0.02 250)\",\n      mutedDark: \"oklch(0.28 0.03 250)\",\n    },\n  },\n  {\n    name: \"Red\",\n    value: \"red\",\n    palette: {\n      primary: \"oklch(0.65 0.18 25)\",\n      background: \"oklch(0.98 0.02 25)\",\n      backgroundDark: \"oklch(0.22 0.09 25)\",\n      foreground: \"oklch(0.18 0.01 25)\",\n      foregroundDark: \"oklch(0.98 0.01 25)\",\n      border: \"oklch(0.85 0.04 25)\",\n      borderDark: \"oklch(0.3 0.06 25)\",\n      accent: \"oklch(0.7 0.09 25)\",\n      accentDark: \"oklch(0.35 0.12 25)\",\n      muted: \"oklch(0.93 0.02 25)\",\n      mutedDark: \"oklch(0.28 0.03 25)\",\n    },\n  },\n  {\n    name: \"Rose\",\n    value: \"rose\",\n    palette: {\n      primary: \"oklch(0.7 0.13 20)\",\n      background: \"oklch(0.98 0.02 20)\",\n      backgroundDark: \"oklch(0.22 0.09 20)\",\n      foreground: \"oklch(0.18 0.01 20)\",\n      foregroundDark: \"oklch(0.98 0.01 20)\",\n      border: \"oklch(0.85 0.04 20)\",\n      borderDark: \"oklch(0.3 0.06 20)\",\n      accent: \"oklch(0.7 0.09 20)\",\n      accentDark: \"oklch(0.35 0.12 20)\",\n      muted: \"oklch(0.93 0.02 20)\",\n      mutedDark: \"oklch(0.28 0.03 20)\",\n    },\n  },\n  {\n    name: \"Yellow\",\n    value: \"yellow\",\n    palette: {\n      primary: \"oklch(0.9 0.18 100)\",\n      background: \"oklch(0.99 0.03 100)\",\n      backgroundDark: \"oklch(0.32 0.09 100)\",\n      foreground: \"oklch(0.22 0.01 100)\",\n      foregroundDark: \"oklch(0.98 0.01 100)\",\n      border: \"oklch(0.93 0.04 100)\",\n      borderDark: \"oklch(0.38 0.06 100)\",\n      accent: \"oklch(0.8 0.09 100)\",\n      accentDark: \"oklch(0.4 0.12 100)\",\n      muted: \"oklch(0.97 0.02 100)\",\n      mutedDark: \"oklch(0.35 0.03 100)\",\n    },\n  },\n  {\n    name: \"Orange\",\n    value: \"orange\",\n    palette: {\n      primary: \"oklch(0.85 0.18 60)\",\n      background: \"oklch(0.99 0.03 60)\",\n      backgroundDark: \"oklch(0.32 0.09 60)\",\n      foreground: \"oklch(0.22 0.01 60)\",\n      foregroundDark: \"oklch(0.98 0.01 60)\",\n      border: \"oklch(0.93 0.04 60)\",\n      borderDark: \"oklch(0.38 0.06 60)\",\n      accent: \"oklch(0.8 0.09 60)\",\n      accentDark: \"oklch(0.4 0.12 60)\",\n      muted: \"oklch(0.97 0.02 60)\",\n      mutedDark: \"oklch(0.35 0.03 60)\",\n    },\n  },\n  {\n    name: \"Green\",\n    value: \"green\",\n    palette: {\n      primary: \"oklch(0.7 0.13 140)\",\n      background: \"oklch(0.98 0.02 140)\",\n      backgroundDark: \"oklch(0.22 0.09 140)\",\n      foreground: \"oklch(0.18 0.01 140)\",\n      foregroundDark: \"oklch(0.98 0.01 140)\",\n      border: \"oklch(0.85 0.04 140)\",\n      borderDark: \"oklch(0.3 0.06 140)\",\n      accent: \"oklch(0.7 0.09 140)\",\n      accentDark: \"oklch(0.35 0.12 140)\",\n      muted: \"oklch(0.93 0.02 140)\",\n      mutedDark: \"oklch(0.28 0.03 140)\",\n    },\n  },\n  {\n    name: \"Violet\",\n    value: \"violet\",\n    palette: {\n      primary: \"oklch(0.7 0.13 300)\",\n      background: \"oklch(0.98 0.02 300)\",\n      backgroundDark: \"oklch(0.22 0.09 300)\",\n      foreground: \"oklch(0.18 0.01 300)\",\n      foregroundDark: \"oklch(0.98 0.01 300)\",\n      border: \"oklch(0.85 0.04 300)\",\n      borderDark: \"oklch(0.3 0.06 300)\",\n      accent: \"oklch(0.7 0.09 300)\",\n      accentDark: \"oklch(0.35 0.12 300)\",\n      muted: \"oklch(0.93 0.02 300)\",\n      mutedDark: \"oklch(0.28 0.03 300)\",\n    },\n  },\n  {\n    name: \"Cyan\",\n    value: \"cyan\",\n    palette: {\n      primary: \"oklch(0.8 0.13 200)\",\n      background: \"oklch(0.98 0.02 200)\",\n      backgroundDark: \"oklch(0.22 0.09 200)\",\n      foreground: \"oklch(0.18 0.01 200)\",\n      foregroundDark: \"oklch(0.98 0.01 200)\",\n      border: \"oklch(0.85 0.04 200)\",\n      borderDark: \"oklch(0.3 0.06 200)\",\n      accent: \"oklch(0.7 0.09 200)\",\n      accentDark: \"oklch(0.35 0.12 200)\",\n      muted: \"oklch(0.93 0.02 200)\",\n      mutedDark: \"oklch(0.28 0.03 200)\",\n    },\n  },\n];\n\n// The key used to store tone in localStorage as a backup\nexport const THEME_TONE_KEY = \"theme-tone-preference\";\n\n/**\n * Function to apply theme tone variables to the document root\n * Now exported so it can be used by ThemeInitializer\n */\nexport function setThemeToneVars(\n  palette: Record<string, string>,\n  isDark: boolean\n) {\n  if (typeof window === \"undefined\") return;\n\n  const root = document.documentElement;\n\n  // Set primary color (same for light/dark)\n  root.style.setProperty(\"--primary\", palette.primary);\n\n  // Set background based on mode\n  root.style.setProperty(\n    \"--background\",\n    isDark ? palette.backgroundDark : palette.background\n  );\n\n  // Set foreground based on mode\n  root.style.setProperty(\n    \"--foreground\",\n    isDark ? palette.foregroundDark : palette.foreground\n  );\n\n  // Set border based on mode\n  root.style.setProperty(\n    \"--border\",\n    isDark ? palette.borderDark : palette.border\n  );\n\n  // Set accent based on mode\n  root.style.setProperty(\n    \"--accent\",\n    isDark ? palette.accentDark : palette.accent\n  );\n\n  // Set muted based on mode\n  root.style.setProperty(\"--muted\", isDark ? palette.mutedDark : palette.muted);\n}\n\n/**\n * Save theme preferences both to Tauri config.json and localStorage\n */\nasync function saveThemePreferences(tone: string, isDark: boolean) {\n  try {\n    // Save to localStorage as fallback\n    if (typeof window !== \"undefined\") {\n      localStorage.setItem(THEME_TONE_KEY, tone);\n    }\n\n    // Save to Tauri config\n    interface ThemeConfig {\n      league_path?: string;\n      skins?: unknown[];\n      favorites?: unknown[];\n      theme?: {\n        tone?: string;\n        isDark?: boolean;\n      };\n    }\n    const config: ThemeConfig = (await invoke(\"load_config\").catch(\n      () => ({})\n    )) as ThemeConfig;\n\n    const updatedConfig = {\n      ...config,\n      league_path: config.league_path ?? \"\",\n      skins: config.skins ?? [],\n      favorites: config.favorites ?? [],\n      theme: {\n        tone,\n        isDark,\n      },\n    };\n\n    await invoke(\"save_selected_skins\", {\n      leaguePath: updatedConfig.league_path,\n      skins: updatedConfig.skins,\n      favorites: updatedConfig.favorites,\n      theme: updatedConfig.theme,\n    }).catch((err: unknown) => {\n      console.error(\"Failed to save theme to config:\", err);\n    });\n\n    console.log(`Theme preferences saved: tone=${tone}, isDark=${isDark}`);\n  } catch (error) {\n    console.error(\"Failed to save theme preferences:\", error);\n  }\n}\n\n/**\n * Custom hook for theme tone management\n */\nexport function useThemeTone() {\n  // Default to blue tone\n  const [tone, setToneState] = useState<string>(\"gray\");\n  const [initialized, setInitialized] = useState(false);\n  const [isTransitioning, setIsTransitioning] = useState(false);\n  const { theme, setTheme, resolvedTheme } = useTheme();\n\n  // Derive isDark from theme or resolvedTheme\n  const isDark = theme === \"dark\" || resolvedTheme === \"dark\";\n\n  // Load theme tone preference on initial render\n  useEffect(() => {\n    const loadThemePreferences = async () => {\n      try {\n        // First, try to load from Tauri config\n        interface ThemeConfig {\n          league_path?: string;\n          skins?: unknown[];\n          favorites?: unknown[];\n          theme?: {\n            tone?: string;\n            isDark?: boolean;\n          };\n        }\n        const config = (await invoke(\"load_config\").catch(\n          () => null\n        )) as ThemeConfig | null;\n        let savedTone = config?.theme?.tone;\n\n        // Fallback to localStorage if not found in Tauri config\n        if (!savedTone && typeof window !== \"undefined\") {\n          const storedTone = localStorage.getItem(THEME_TONE_KEY);\n          savedTone = storedTone ?? undefined;\n        }\n\n        // Apply saved tone if found\n        if (savedTone) {\n          setToneState(savedTone);\n        }\n\n        setInitialized(true);\n      } catch (error) {\n        console.error(\"Failed to load theme preferences:\", error);\n        setInitialized(true);\n      }\n    };\n\n    void loadThemePreferences();\n  }, []);\n\n  // Custom setter for tone that also saves the preference\n  const setTone = useCallback(\n    (newTone: string) => {\n      setToneState(newTone);\n      void saveThemePreferences(newTone, isDark);\n    },\n    [isDark]\n  );\n\n  // Improved theme toggler with transition class\n  const toggleTheme = useCallback(\n    (newIsDark: boolean) => {\n      if (isTransitioning) return;\n\n      // Add transitioning class to prevent flickering\n      if (typeof document !== \"undefined\") {\n        document.documentElement.classList.add(\"transitioning-theme\");\n      }\n\n      // Set transitioning state\n      setIsTransitioning(true);\n\n      // Change theme\n      setTheme(newIsDark ? \"dark\" : \"light\");\n\n      // Save preferences\n      void saveThemePreferences(tone, newIsDark);\n\n      // Remove transitioning class after the theme change has completed\n      const transitionDuration = 250; // slightly longer than CSS transition\n      setTimeout(() => {\n        if (typeof document !== \"undefined\") {\n          document.documentElement.classList.remove(\"transitioning-theme\");\n        }\n        setIsTransitioning(false);\n      }, transitionDuration);\n    },\n    [tone, setTheme, isTransitioning]\n  );\n\n  // Apply theme variables when tone or dark mode changes\n  useEffect(() => {\n    if (!initialized) return;\n\n    // Don't make CSS changes during transitions\n    if (isTransitioning) return;\n\n    // Get the selected tone palette\n    const selected = TONES.find((t) => t.value === tone) ?? TONES[1];\n\n    // Apply CSS variables with a small delay to ensure DOM is ready\n    const applyVars = () => {\n      setThemeToneVars(selected.palette, isDark);\n    };\n\n    // Use requestAnimationFrame for better timing with browser paint cycle\n    if (typeof window !== \"undefined\") {\n      window.requestAnimationFrame(applyVars);\n    } else {\n      applyVars();\n    }\n  }, [tone, isDark, initialized, isTransitioning]);\n\n  // Provide a clean interface for the component\n  return {\n    tone,\n    setTone,\n    isDark,\n    toggleTheme,\n    initialized,\n    isTransitioning,\n  };\n}\n\nexport function ThemeToneSelector() {\n  const { tone, setTone, isDark, toggleTheme, isTransitioning } =\n    useThemeToneContext();\n\n  return (\n    <>\n      <div className=\"flex items-center justify-between\">\n        <Label>Theme</Label>\n        <div className=\"flex items-center gap-2\">\n          <SunIcon size={14} className={isDark ? \"opacity-40\" : \"\"} />\n          <Switch\n            checked={isDark}\n            onCheckedChange={toggleTheme}\n            disabled={isTransitioning}\n          />\n          <MoonIcon size={14} className={!isDark ? \"opacity-40\" : \"\"} />\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-3 gap-2\">\n        {TONES.map((t) => (\n          <button\n            key={t.value}\n            className={cn(\n              \"relative h-8 rounded-md transition-all flex items-center justify-center\",\n              tone === t.value\n                ? \"ring-2 ring-primary ring-offset-2 ring-offset-background\"\n                : \"ring-1 ring-border hover:ring-2\"\n            )}\n            onClick={() => {\n              if (!isTransitioning) {\n                setTone(t.value);\n                toast.success(`Theme changed to ${t.name}`);\n              }\n            }}\n            disabled={isTransitioning}\n            style={{\n              background: t.palette.primary,\n              opacity: isTransitioning ? 0.7 : 1,\n              cursor: isTransitioning ? \"not-allowed\" : \"pointer\",\n            }}\n            title={t.name}\n          />\n        ))}\n      </div>\n    </>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1009, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/feitan/Desktop/new%20ai/src/components/providers/ThemeToneProvider.tsx"],"sourcesContent":["\"use client\";\n\nimport React, {\n  createContext,\n  useContext,\n  useState,\n  useEffect,\n  useCallback,\n} from \"react\";\nimport { useTheme } from \"next-themes\";\nimport { invoke } from \"@tauri-apps/api/core\";\nimport { TONES, setThemeToneVars, THEME_TONE_KEY } from \"../ThemeToneSelector\";\n\ninterface ThemeToneContextProps {\n  tone: string;\n  setTone: (tone: string) => void;\n  isDark: boolean;\n  toggleTheme: (isDark: boolean) => void;\n  initialized: boolean;\n  isTransitioning: boolean;\n}\n\nconst ThemeToneContext = createContext<ThemeToneContextProps | undefined>(\n  undefined\n);\n\nexport const ThemeToneProvider = ({\n  children,\n}: {\n  children: React.ReactNode;\n}) => {\n  const [tone, setToneState] = useState<string>(\"gray\");\n  const [initialized, setInitialized] = useState(false);\n  const [isTransitioning, setIsTransitioning] = useState(false);\n  const { theme, setTheme, resolvedTheme } = useTheme();\n\n  const isDark = theme === \"dark\" || resolvedTheme === \"dark\";\n\n  useEffect(() => {\n    const loadThemePreferences = async () => {\n      try {\n        interface ThemeConfig {\n          league_path?: string;\n          skins?: unknown[];\n          favorites?: unknown[];\n          theme?: {\n            tone?: string;\n            isDark?: boolean;\n          };\n        }\n        const config = (await invoke(\"load_config\").catch(\n          () => null\n        )) as ThemeConfig | null;\n        let savedTone = config?.theme?.tone;\n        if (!savedTone && typeof window !== \"undefined\") {\n          const storedTone = localStorage.getItem(THEME_TONE_KEY);\n          savedTone = storedTone ?? undefined;\n        }\n        if (savedTone) {\n          setToneState(savedTone);\n        }\n        setInitialized(true);\n      } catch (error) {\n        setInitialized(true);\n      }\n    };\n    void loadThemePreferences();\n  }, []);\n\n  const setTone = useCallback(\n    (newTone: string) => {\n      setToneState(newTone);\n      void saveThemePreferences(newTone, isDark);\n    },\n    [isDark]\n  );\n\n  const saveThemePreferences = async (tone: string, isDark: boolean) => {\n    try {\n      if (typeof window !== \"undefined\") {\n        localStorage.setItem(THEME_TONE_KEY, tone);\n      }\n      interface ThemeConfig {\n        league_path?: string;\n        skins?: unknown[];\n        favorites?: unknown[];\n        theme?: {\n          tone?: string;\n          isDark?: boolean;\n        };\n      }\n      const config: ThemeConfig = (await invoke(\"load_config\").catch(\n        () => ({})\n      )) as ThemeConfig;\n      const updatedConfig = {\n        ...config,\n        league_path: config.league_path ?? \"\",\n        skins: config.skins ?? [],\n        favorites: config.favorites ?? [],\n        theme: {\n          tone,\n          isDark,\n        },\n      };\n      await invoke(\"save_selected_skins\", {\n        leaguePath: updatedConfig.league_path,\n        skins: updatedConfig.skins,\n        favorites: updatedConfig.favorites,\n        theme: updatedConfig.theme,\n      }).catch(() => {});\n    } catch {}\n  };\n\n  const toggleTheme = useCallback(\n    (newIsDark: boolean) => {\n      if (isTransitioning) return;\n      if (typeof document !== \"undefined\") {\n        document.documentElement.classList.add(\"transitioning-theme\");\n      }\n      setIsTransitioning(true);\n      setTheme(newIsDark ? \"dark\" : \"light\");\n      void saveThemePreferences(tone, newIsDark);\n      const transitionDuration = 250;\n      setTimeout(() => {\n        if (typeof document !== \"undefined\") {\n          document.documentElement.classList.remove(\"transitioning-theme\");\n        }\n        setIsTransitioning(false);\n      }, transitionDuration);\n    },\n    [tone, setTheme, isTransitioning]\n  );\n\n  useEffect(() => {\n    if (!initialized) return;\n    if (isTransitioning) return;\n    const selected = TONES.find((t) => t.value === tone) ?? TONES[1];\n    const applyVars = () => {\n      setThemeToneVars(selected.palette, isDark);\n    };\n    if (typeof window !== \"undefined\") {\n      window.requestAnimationFrame(applyVars);\n    } else {\n      applyVars();\n    }\n  }, [tone, isDark, initialized, isTransitioning]);\n\n  return (\n    <ThemeToneContext.Provider\n      value={{\n        tone,\n        setTone,\n        isDark,\n        toggleTheme,\n        initialized,\n        isTransitioning,\n      }}\n    >\n      {children}\n    </ThemeToneContext.Provider>\n  );\n};\n\nexport function useThemeToneContext() {\n  const ctx = useContext(ThemeToneContext);\n  if (!ctx)\n    throw new Error(\n      \"useThemeToneContext must be used within ThemeToneProvider\"\n    );\n  return ctx;\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1144, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/feitan/Desktop/new%20ai/src/components/ErrorBoundary.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { Component, ErrorInfo, ReactNode } from \"react\";\nimport { Trophy } from \"lucide-react\";\n\ninterface Props {\n  children?: ReactNode;\n}\n\ninterface State {\n  hasError: boolean;\n}\n\nclass ErrorBoundary extends Component<Props, State> {\n  public state: State = {\n    hasError: false\n  };\n\n  public static getDerivedStateFromError(_: Error): State {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true };\n  }\n\n  public componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    console.error(\"Uncaught error:\", error, errorInfo);\n  }\n\n  public render() {\n    if (this.state.hasError) {\n      return (\n        <div className=\"flex items-center justify-center h-screen w-full\">\n          <div className=\"text-center space-y-4\">\n            <div className=\"w-16 h-16 rounded-full bg-destructive/10 flex items-center justify-center mx-auto\">\n              <Trophy className=\"h-8 w-8 text-destructive\" />\n            </div>\n            <h3 className=\"text-xl font-semibold\">Oops! Something went wrong.</h3>\n            <p className=\"text-muted-foreground max-w-md\">\n              We're sorry, but an unexpected error occurred. Please try reloading the application.\n            </p>\n            <button\n              onClick={() => window.location.reload()}\n              className=\"px-4 py-2 bg-primary text-primary-foreground rounded-md hover:bg-primary/90 transition-colors\"\n            >\n              Reload Application\n            </button>\n          </div>\n        </div>\n      );\n    }\n\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n"],"names":[],"mappings":";;;;AAEA;AACA;AAHA;;;;AAaA,MAAM,sBAAsB,oTAAA,CAAA,YAAS;IAC5B,QAAe;QACpB,UAAU;IACZ,EAAE;IAEF,OAAc,yBAAyB,CAAQ,EAAS;QACtD,6DAA6D;QAC7D,OAAO;YAAE,UAAU;QAAK;IAC1B;IAEO,kBAAkB,KAAY,EAAE,SAAoB,EAAE;QAC3D,QAAQ,KAAK,CAAC,mBAAmB,OAAO;IAC1C;IAEO,SAAS;QACd,IAAI,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE;YACvB,qBACE,6VAAC;gBAAI,WAAU;0BACb,cAAA,6VAAC;oBAAI,WAAU;;sCACb,6VAAC;4BAAI,WAAU;sCACb,cAAA,6VAAC,0RAAA,CAAA,SAAM;gCAAC,WAAU;;;;;;;;;;;sCAEpB,6VAAC;4BAAG,WAAU;sCAAwB;;;;;;sCACtC,6VAAC;4BAAE,WAAU;sCAAiC;;;;;;sCAG9C,6VAAC;4BACC,SAAS,IAAM,OAAO,QAAQ,CAAC,MAAM;4BACrC,WAAU;sCACX;;;;;;;;;;;;;;;;;QAMT;QAEA,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ;IAC5B;AACF;uCAEe","debugId":null}}]
}